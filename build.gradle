import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java'
    id 'idea'
    id 'java-library'
    //https://plugins.gradle.org/plugin/org.springframework.boot/2.6.13
    id 'org.springframework.boot' version '2.6.13'
    //https://plugins.gradle.org/plugin/io.spring.dependency-management
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

}
ext{
    springCloudVersion = '2021.0.5'
    springCloudeAlibabaVersion = '2021.0.5.0'
}

// 所有模块生效
allprojects {
    // 配置项目信息
    group = 'com.lwd'
    version = '0.0.1-SNAPSHOT'
    // 配置字符编码
    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }

    java {
        sourceCompatibility = '8'
        targetCompatibility = '8'
    }
    repositories {
        mavenLocal()
        maven {
            url 'http://10.8.33.254:8081/repository/maven-public'
            allowInsecureProtocol = true
        }
        maven {url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        gradlePluginPortal()
        mavenCentral()
    }
}
// 所有子模块生效
subprojects{
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    //所有子模块都是springboot项目，如不是，不能打包。
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    //所有子模块的-依赖版本管理
    dependencyManagement {
        imports {
            mavenBom SpringBootPlugin.BOM_COORDINATES
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudeAlibabaVersion}"
        }
        // 自定义配置第三方依赖
    }
    /// 子模块公共jar
    dependencies{
        // compileOnly：这样做可以确保Lombok在编译时可用，但不会包含在最终的构建产物中，从而减小构建产物的大小。
        // api：依赖可以传递给子模块
        // compileOnlyApi：仅编译时可用，不包含在构建产物中，并且可以传递给子模块
        compileOnlyApi 'org.projectlombok:lombok'
        // 表示将Lombok库作为注解处理器导入。
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
    tasks.bootJar {
        enabled = true
    }
}
tasks.bootJar {
    enabled = false
}
